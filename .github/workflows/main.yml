on:
  push:
    branches: [master]
  pull_request:
    branches: [master]


jobs:
  action_tests:
    runs-on: ${{ matrix.os }}
    name: Action Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        cmake_ver: ['', '3.19.3', '3.15.1', '2.8']

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Setup cmake
      uses: ./
      id: setup
      with:
        cmake-version: ${{ matrix.cmake_ver }}

    - name: Run cmake --version
      shell: bash
      if: matrix.cmake_ver != ''
      run: |
        VERSION=`cmake --version`
        echo $VERSION
        [[ "$VERSION" =~ "${{ matrix.cmake_ver }}" ]]

    - name: Run cmake --version
      # [[ "$VERSION" =~ "" ]] does not work as expected on macos, so don't
      # do the test when using the latest cmake version
      shell: bash
      if: matrix.cmake_ver == ''
      run: |
        VERSION=`cmake --version`
        echo $VERSION

  unit_tests:
    runs-on: ${{ matrix.os }}
    name: Unit Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - uses: actions/setup-node@v5
      with:
        node-version: 22

    - name: Cache NPM dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

    - name: Run checks and tests
      run: |
        npm run format
        git diff --quiet src/ __tests__/
        npm run package
        git diff --quiet dist/
        npm run test
